#
# Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
# ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#

# format of paths
# files path is relative to <ejdk-home>/<target>
# ~ is used to seperate source and the path that needs to be re-created in the dest
# The destination of the files is specified using files.dest which is relative to --dest.
#   If nothing specified or the property doesn't exist, then the sources are copied in to --dest

# profile names can be changed. Program uses profile1, 2, 3 and jre but maps to the names given here.
profile1.name=compact1
profile2.name=compact2
profile3.name=compact3
jre.name=jre
# Most probably no need to change the following values.
# Following specify that for profile1 copy all the directory structure under profile1 name under ejdk-home/target folder
# If more files need to be added for each profile, list them out with comma seperation.
profile.profile1.files = ${profile1.name}~
#profile.profile1.files.dest = 
profile.profile2.files = ${profile2.name}~
#profile.profile2.files.dest = 
profile.profile3.files = ${profile3.name}~
#profile.profile3.files.dest = 
profile.jre.files = ${jre.name}~
#profile.jre.files.dest =
#
# Extensions that are normally only in the full JRE, or are distinct
# entities (like JavaFX) must be copied in to profiles when requested.
# Unwanted extensions normally present in the full JRE or profile, must
# be removed explicitly.
extension.sunec.removefiles = lib/ext/sunec.jar,lib/${arch}/libsunec.so
extension.sunpkcs11.removefiles = lib/ext/sunpkcs11.jar,lib/${arch}/libj2pkcs11.so
extension.locales.removefiles = lib/ext/localedata.jar
extension.nashorn.files = ${jre.name}~lib/ext/nashorn.jar
extension.nashorn.removefiles = lib/ext/nashorn.jar
extension.charsets.files=${jre.name}~lib/charsets.jar
extension.charsets.removefiles = lib/charsets.jar
extension.fx\:graphics.files = extensions/fx/graphics~lib
# Controls implies graphics
extension.fx\:controls.files = extensions/fx/graphics~lib,extensions/fx/controls~lib
#
# arch is set programmatically based on the target, for ex: i386 for linux_i586, arm for *arm* etc
#We need some variable substitution in property values
#It is currently ${name}.
debug.files = ${jre.name}~lib/${arch}/libdt_socket.so,${jre.name}~lib/${arch}/libhprof.so,${jre.name}~lib/jvm.hprof.txt,${jre.name}~lib/${arch}/libjava_crw_demo.so,${jre.name}~lib/${arch}/libjdwp.so,${jre.name}~lib/${arch}/libnpt.so
#debug.files.dest = 
# Remove the following files from the target
target.cleanup.files = *.diz, *.debuginfo
# some target name related properties
# alternate names for arch. If the name is same, no need of that property. for example arm.arch.name is not necessary
arm.arch.name = arm
i586.arch.name = i386
ppc.arch.name = ppc

